name: CI/CD with Monitoring

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: kraj28/spring-boot-demo

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build JAR
        run: mvn -B clean package

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-artifacts
          path: |
            helm/
            scripts/
            monitoring/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: deployment-artifacts

      - name: Create KinD cluster with ingress
        uses: container-tools/kind-action@v2
        with:
          wait: 120s
          version: v0.23.0
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane
              kubeadmConfigPatches:
              - |
                kind: InitConfiguration
                nodeRegistration:
                  kubeletExtraArgs:
                    node-labels: "ingress-ready=true"
              extraPortMappings:
              - containerPort: 80
                hostPort: 80
                protocol: TCP
              - containerPort: 443
                hostPort: 443
                protocol: TCP

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.2

      - name: Install NGINX Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=90s

      - name: Setup monitoring stack
        run: |
          chmod +x scripts/setup-monitoring.sh
          ./scripts/setup-monitoring.sh

      - name: Deploy application
        run: |
          helm upgrade --install demo-release ./helm/demo \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ github.sha }} \
            --set monitoring.enabled=true \
            --set ingress.enabled=true \
            --wait

          kubectl rollout status deployment/demo-release-demo

      - name: Run smoke tests
        run: |
          chmod +x scripts/smoke-test.sh
          ./scripts/smoke-test.sh

      - name: Generate monitoring reports
        run: |
          chmod +x scripts/generate-reports.sh
          ./scripts/generate-reports.sh

      - name: Export monitoring data
        run: |
          chmod +x scripts/export-monitoring-data.sh
          ./scripts/export-monitoring-data.sh

      - name: Upload monitoring artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-reports
          path: |
            reports/
            monitoring-data/
