name: CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: kraj28/spring-boot-demo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build JAR
        run: mvn -B clean package

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Upload chart
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart
          path: helm

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download chart
        uses: actions/download-artifact@v4
        with:
          name: helm-chart
          path: helm

      - name: Create KinD cluster
        uses: container-tools/kind-action@v2
        with:
          wait: 120s
          version: v0.23.0

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.2

      - name: Deploy with Helm
        run: |
          helm upgrade --install demo-release ./helm/demo \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ github.sha }} \
            --wait

          DEPLOYMENT_NAME="demo-release-demo"
          echo "Waiting for rollout of $DEPLOYMENT_NAME"
          kubectl rollout status deployment/$DEPLOYMENT_NAME

      - name: Debug - Get all services
        run: kubectl get svc

      - name: Curl the service
        run: |
          echo "Waiting for deployment to become available..."
          kubectl wait --for=condition=available --timeout=60s deployment/demo-release-demo

          echo "Trying to curl the service inside the cluster..."
          for i in {1..5}; do
            RESP=$(kubectl run curl --image=curlimages/curl:8.8.0 -i --rm --restart=Never -- \
                   curl -s http://demo-release-demo:8080/old) && break
            echo "Attempt $i failed, retrying..."
            sleep 5
          done

          echo "Response: $RESP"
          [[ "$RESP" == *"OLD code"* ]] || (echo "Unexpected response" && exit 1)
